{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}

    upstream {{ $host }} {
        {{ range $index, $value := $containers }}

            {{ $addrLen := len $value.Addresses }}
            {{/* If only 1 port exposed, use that */}}
            {{ if eq $addrLen 1 }}
                {{ with $address := index $value.Addresses 0 }}
                   # {{$value.Name}}
                   server {{ $address.IP }}:{{ $address.Port }};
                {{ end }}

            {{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
            {{ else if $value.Env.VIRTUAL_PORT }}
                {{ range $i, $address := $value.Addresses }}
                   {{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
                   # {{$value.Name}}
                   server {{ $address.IP }}:{{ $address.Port }};
                   {{ end }}
                {{ end }}

            {{/* Else default to standard web port 80 */}}
            {{ else }}
                {{ range $i, $address := $value.Addresses }}
                   {{ if eq $address.Port "80" }}
                   # {{$value.Name}}
                   server {{ $address.IP }}:{{ $address.Port }};
                   {{ end }}
                {{ end }}
            {{ end }}
        {{ end }}
    }

    server {
        listen 80;
        listen [::]:80;

        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        server_name  {{ $host }};
        proxy_buffering off;

        {{ range $index, $value := $containers }}
            {{ if $value.Env.SSL_ONLY }}
        rewrite        ^ https://$server_name$request_uri? permanent;
            {{ end }}
        {{ end }}

        {{ range $index, $value := $containers }}
            {{ if $value.Env.PAGESPEED }}
        include pagespeed.conf;
        pagespeed Domain {{ $host }};
                {{ end }}
        {{ end }}

        {{ range $index, $value := $containers }}
            location / {
                include /etc/nginx/proxy_params;
                {{ if $value.Env.INCLUDE }}
                    include /etc/nginx/includes/{{ $value.Env.INCLUDE }};
                {{ end }}
                {{ if $value.Env.VIRTUAL_PORT_IS_HTTPS }}
                    proxy_pass https://{{ $host }};
                {{ else }}
                    proxy_pass http://{{ $host }};
                {{ end }}
            }
        {{ end }}
    }
{{ end }}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}

    upstream ssl-{{ $host }} {
        {{ range $index, $value := $containers }}
            {{ if $value.Env.VIRTUAL_SSL_PORT }}
                {{ range $i, $address := $value.Addresses }}
                    {{ if eq $address.Port $value.Env.VIRTUAL_SSL_PORT }}
                    # {{$value.Name}}
                    server {{ $address.IP }}:{{ $address.Port }};
                    {{end}}
                {{end}}
            {{ else }}
                {{ range $i, $address := $value.Addresses }}
                    {{ if eq $address.Port "443" }}
                    # {{$value.Name}}
                    server {{ $address.IP }}:{{ $address.Port }};
                    {{ end }}
                {{ end }}
            {{ end }}
        {{ end }}
    }

    server {
        listen 443 ssl spdy;
        listen [::]:443 ssl spdy;

        server_name {{ $host }};
        proxy_buffering off;

        {{ if SSLcertExists $host }}
        ssl_certificate /etc/nginx/ssl/{{ $host }}/ssl.crt;
        ssl_certificate_key /etc/nginx/ssl/{{ $host }}/ssl.key;

        resolver 8.8.8.8 8.8.4.4;
#        ssl_stapling on;
#        ssl_stapling_verify on;
        resolver_timeout 5s;
        {{ end }}

        ssl_session_cache  builtin:1000  shared:SSL:10m;

        ssl                        on;

        ssl_ecdh_curve secp384r1;

        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Content-Type-Options nosniff;

        {{ range $index, $value := $containers }}
                {{ if $value.Env.PAGESPEED }}
                    include pagespeed.conf;
                    pagespeed Domain {{ $host }};
                    pagespeed MapOriginDomain "http://{{ $host }}" "https://{{ $host }}";
                {{ end }}
        {{ end }}

        {{ range $index, $value := $containers }}
            location / {
                include /etc/nginx/proxy_params;
                {{ if $value.Env.INCLUDE }}
                    include /etc/nginx/includes/{{ $value.Env.INCLUDE }};
                {{ end }}
                {{ if $value.Env.VIRTUAL_SSL_PORT_IS_HTTP }}
                    proxy_pass http://ssl-{{ $host }};
                {{ else }}
                    proxy_pass https://ssl-{{ $host }};
                {{ end }}
            }
        {{ end }}
    }

{{ end }}

